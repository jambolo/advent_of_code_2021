// Advent of Code 2021
// Day 23

#include "common/PathFinder.h"

#include <nlohmann/json.hpp>

#include <algorithm>
#include <exception>
#include <fstream>
#include <iostream>
#include <sstream>
#include <string>
#include <vector>

using json = nlohmann::json;

#define TEST    1
#define PART_1  1

#if defined PART_1
static int constexpr NUMBER_OF_NODES = 15;
#else
static int constexpr NUMBER_OF_NODES = 23;
#endif

static int constexpr ROOMS = 7; // Hallway occupies spot below this and room start with this spot

using State = std::array<char, NUMBER_OF_NODES>;


struct Transition
{
    int cost = 0;
#if defined(PART_1)
    int intermediates[5];
#else
    int intermediates[9];
#endif
};

struct Node : public PathFinder::Node
{
public:
    Node(State const& state);
    State const& state() const { return state_; }
    int64_t stateId() const { return stateId_; }

private:

    virtual void open(float cost, PathFinder::Node * pPredecessor, PathFinder::Node const * goal) override;
    bool pathIsClear(Transition const & transition);
    virtual float h(PathFinder::Node const* goal) const override;

    State state_;
    int64_t stateId_;
};

//struct Edge : public PathFinder::Edge
//{
//};

using NodeMap = std::map<int64_t, std::shared_ptr<Node>>;

static int64_t stateId(State const& state);
static State moveThing(State const& state, int from, int to);
static bool isRoomSquatted(State const& state, char type);
static bool inFinalRoom(int tr, char type);
static int firstRoomSpot(char type);
static float movementCost(char type);

// +-----------+
// |01.2.3.4.56|
// +-+7|8|9|a+-+
//   |b|c|d|e|
//   |f|g|h|i|  <-- part 2
//   |j|k|m|n|  <-- part 2
//   +-+-+-+-+

static Transition constexpr transitions[NUMBER_OF_NODES][NUMBER_OF_NODES] =
{
    {
        { 0, {} },                                              //  0 -  0
        { 1, {} },                                              //  0 -  1
        { 3, { 1} },                                            //  0 -  2
        { 5, { 1,  2} },                                        //  0 -  3
        { 7, { 1,  2,  3} },                                    //  0 -  4
        { 9, { 1,  2,  3,  4} },                                //  0 -  5
        {10, { 1,  2,  3,  4,  5} },                            //  0 -  6
        { 3, { 1} },                                            //  0 -  7
        { 5, { 1,  2} },                                        //  0 -  8
        { 7, { 1,  2,  3} },                                    //  0 -  9
        { 9, { 1,  2,  3,  4} },                                //  0 - 10
        { 4, { 1,                              7} },            //  0 - 11
        { 6, { 1,  2,                          8} },            //  0 - 12
        { 8, { 1,  2,  3,                      9} },            //  0 - 13
        {10, { 1,  2,  3,  4,                 10} }             //  0 - 14
#if !defined(PART_1)                          
        ,                                     
        { 5, { 1,                              7, 11}},         //  0 - 15
        { 7, { 1,  2,                          8, 12}},         //  0 - 16
        { 9, { 1,  2,  3,                      9, 13}},         //  0 - 17
        {11, { 1,  2,  3,  4,                 10, 14}},         //  0 - 18
        { 6, { 1,                              7, 11, 15}},     //  0 - 19
        { 8, { 1,  2,                          8, 12, 16}},     //  0 - 20
        {10, { 1,  2,  3,                      9, 13, 17}},     //  0 - 21
        {12, { 1,  2,  3,  4,                 10, 14, 18}}      //  0 - 22
#endif                                        
    },                                        
    {                                         
        { 1, {} },                                              //  0 -  1
        { 0, {} },                                              //  1 -  1
        { 2, {} },                                              //  1 -  2
        { 4, { 2} },                                            //  1 -  3
        { 6, { 2,  3} },                                        //  1 -  4
        { 8, { 2,  3,  4} },                                    //  1 -  5
        { 9, { 2,  3,  4,  5} },                                //  1 -  6
        { 2, {} },                                              //  1 -  7
        { 4, { 2} },                                            //  1 -  8
        { 6, { 2,  3} },                                        //  1 -  9
        { 8, { 2,  3,  4} },                                    //  1 - 10
        { 3, {                                 7} },            //  1 - 11
        { 5, { 2,                              8} },            //  1 - 12
        { 7, { 2,  3,                          9} },            //  1 - 13
        { 9, { 2,  3,  4,                     10} }             //  1 - 14
#if !defined(PART_1)                          
        ,                                     
        { 4, {                                 7, 11}},         //  1 - 15
        { 6, { 2,                              8, 12}},         //  1 - 16
        { 8, { 2,  3,                          9, 13}},         //  1 - 17
        {10, { 2,  3,  4,                     10, 14}},         //  1 - 18
        { 5, {                                 7, 11, 15}},     //  1 - 19
        { 7, { 2,                              8, 12, 16}},     //  1 - 20
        { 9, { 2,  3,                          9, 13, 17}},     //  1 - 21
        {11, { 2,  3,  4,                     10, 14, 18}}      //  1 - 22
#endif                                        
    },                                        
    {                                         
        { 3, { 1} },                                            //  0 -  2
        { 2, {} },                                              //  1 -  2
        { 0, {} },                                              //  2 -  2
        { 2, {} },                                              //  2 -  3
        { 4, { 3} },                                            //  2 -  4
        { 6, { 3,  4} },                                        //  2 -  5
        { 7, { 3,  4,  5} },                                    //  2 -  6
        { 2, {} },                                              //  2 -  7
        { 2, {} },                                              //  2 -  8
        { 4, { 3} },                                            //  2 -  9
        { 6, { 3,  4} },                                        //  2 - 10
        { 3, {                                 7} },            //  2 - 11
        { 3, {                                 8} },            //  2 - 12
        { 5, { 3,                              9} },            //  2 - 13
        { 7, { 3,  4,                         10} }             //  2 - 14
#if !defined(PART_1)                          
        ,                                     
        { 4, {                                 7, 11}},         //  2 - 15
        { 4, {                                 8, 12}},         //  2 - 16
        { 6, { 3,                              9, 13}},         //  2 - 17
        { 8, { 3,  4,                         10, 14}},         //  2 - 18
        { 5, {                                 7, 11, 15}},     //  2 - 19
        { 5, {                                 8, 12, 16}},     //  2 - 20
        { 7, { 3,                              9, 13, 17}},     //  2 - 21
        { 9, { 3,  4,                         10, 14, 18}}      //  2 - 22
#endif                                        
    },                                        
    {                                         
        { 5, { 1,  2} },                                        //  0 -  3
        { 4, { 2} },                                            //  1 -  3
        { 2, {} },                                              //  2 -  3
        { 0, {} },                                              //  3 -  3
        { 2, {} },                                              //  3 -  4
        { 4, { 4} },                                            //  3 -  5
        { 5, { 4,  5} },                                        //  3 -  6
        { 4, { 2} },                                            //  3 -  7
        { 2, {} },                                              //  3 -  8
        { 2, {} },                                              //  3 -  9
        { 4, { 4} },                                            //  3 - 10
        { 5, { 2,                              7} },            //  3 - 11
        { 3, {                                 8} },            //  3 - 12
        { 3, {                                 9} },            //  3 - 13
        { 5, { 4,                             10} }             //  3 - 14
#if !defined(PART_1)                          
        ,                                     
        { 6, { 2,                              7, 11}},         //  3 - 15
        { 4, {                                 8, 12}},         //  3 - 16
        { 4, {                                 9, 13}},         //  3 - 17
        { 6, { 4,                             10, 14}},         //  3 - 18
        { 7, { 2,                              7, 11, 15}},     //  3 - 19
        { 5, {                                 8, 12, 16}},     //  3 - 20
        { 5, {                                 9, 13, 17}},     //  3 - 21
        { 7, { 4,                             10, 14, 18}}      //  3 - 22
#endif                                        
    },                                        
    {                                         
        { 7, { 1,  2,  3} },                                    //  0 -  4
        { 6, { 2,  3} },                                        //  1 -  4
        { 4, { 3} },                                            //  2 -  4
        { 2, {} },                                              //  3 -  4
        { 0, {} },                                              //  4 -  4
        { 2, {} },                                              //  4 -  5
        { 3, { 5} },                                            //  4 -  6
        { 6, { 2,  3} },                                        //  4 -  7
        { 4, { 3} },                                            //  4 -  8
        { 2, {} },                                              //  4 -  9
        { 2, {} },                                              //  4 - 10
        { 7, { 2,  3,                          7} },            //  4 - 11
        { 5, { 3,                              8} },            //  4 - 12
        { 3, {                                 9} },            //  4 - 13
        { 3, {                                10} }             //  4 - 14
#if !defined(PART_1)                          
        ,                                     
        { 8, { 2,  3,                          7, 11}},         //  4 - 15
        { 6, { 3,                              8, 12}},         //  4 - 16
        { 4, {                                 9, 13}},         //  4 - 17
        { 4, {                                10, 14}},         //  4 - 18
        { 9, { 2,  3,                          7, 11, 15}},     //  4 - 19
        { 7, { 3,                              8, 12, 16}},     //  4 - 20
        { 5, {                                 9, 13, 17}},     //  4 - 21
        { 5, {                                10, 14, 18}}      //  4 - 22
#endif                                        
    },                                        
    {                                         
        { 9, { 1,  2,  3,  4} },                                //  0 -  5
        { 8, { 2,  3,  4} },                                    //  1 -  5
        { 6, { 3,  4} },                                        //  2 -  5
        { 4, { 4} },                                            //  3 -  5
        { 2, {} },                                              //  4 -  5
        { 0, {} },                                              //  5 -  5
        { 1, {} },                                              //  5 -  6
        { 8, { 2,  3,  4} },                                    //  5 -  7
        { 6, { 3,  4} },                                        //  5 -  8
        { 4, { 4} },                                            //  5 -  9
        { 2, {} },                                              //  5 - 10
        { 9, { 2,  3,  4,                      7} },            //  5 - 11
        { 7, { 3,  4,                          8} },            //  5 - 12
        { 5, { 4,                              9} },            //  5 - 13
        { 3, {                                10} }             //  5 - 14
#if !defined(PART_1)                          
        ,                                     
        {10, { 2,  3,  4,                      7, 11}},         //  5 - 15
        { 8, { 3,  4,                          8, 12}},         //  5 - 16
        { 6, { 4,                              9, 13}},         //  5 - 17
        { 4, {                                10, 14}},         //  5 - 18
        {11, { 2,  3,  4,                      7, 11, 15}},     //  5 - 19
        { 9, { 3,  4,                          8, 12, 16}},     //  5 - 20
        { 7, { 4,                              9, 13, 17}},     //  5 - 21
        { 5, {                                10, 14, 18}}      //  5 - 22
#endif                                        
    },                                        
    {                                         
        {10, { 1,  2,  3,  4,  5} },                            //  0 -  6
        { 9, { 2,  3,  4,  5} },                                //  1 -  6
        { 7, { 3,  4,  5} },                                    //  2 -  6
        { 5, { 4,  5} },                                        //  3 -  6
        { 3, { 5} },                                            //  4 -  6
        { 1, {} },                                              //  5 -  6
        { 0, {} },                                              //  6 -  6
        { 9, { 2,  3,  4,  5} },                                //  6 -  7
        { 7, { 3,  4,  5} },                                    //  6 -  8
        { 5, { 4,  5} },                                        //  6 -  9
        { 3, { 5} },                                            //  6 - 10
        {10, { 2,  3,  4,  5,                  7} },            //  6 - 11
        { 8, { 3,  4,  5,                      8} },            //  6 - 12
        { 6, { 4,  5,                          9} },            //  6 - 13
        { 4, { 5,                             10} }             //  6 - 14
#if !defined(PART_1)                          
        ,                                     
        {11, { 2,  3,  4,  5,                  7, 11}},         //  6 - 15
        { 9, { 3,  4,  5,                      8, 12}},         //  6 - 16
        { 7, { 4,  5,                          9, 13}},         //  6 - 17
        { 5, { 5,                             10, 14}},         //  6 - 18
        {12, { 2,  3,  4,  5,                  7, 11, 15}},     //  6 - 19
        {10, { 3,  4,  5,                      8, 12, 16}},     //  6 - 20
        { 8, { 4,  5,                          9, 13, 17}},     //  6 - 21
        { 6, { 5,                             10, 14, 18}}      //  6 - 22
#endif                                        
    },                                        
    {                                         
        { 3, { 1} },                                            //  0 -  7
        { 2, {} },                                              //  1 -  7
        { 2, {} },                                              //  2 -  7
        { 4, { 2} },                                            //  3 -  7
        { 6, { 2,  3} },                                        //  4 -  7
        { 8, { 2,  3,  4} },                                    //  5 -  7
        { 9, { 2,  3,  4,  5} },                                //  6 -  7
        { 0, {} },                                              //  7 -  7
        { 4, { 2}},                                             //  7 -  8
        { 6, { 2,  3}},                                         //  7 -  9
        { 8, { 2,  3,  4}},                                     //  7 - 10
        { 1, {} },                                              //  7 - 11
        { 5, { 2,  8}},                                         //  7 - 12
        { 7, { 2,  3,  9}},                                     //  7 - 13
        { 9, { 2,  3,  4, 10}}                                  //  7 - 14
#if !defined(PART_1)                          
        ,                                     
        { 2, {                                    11}},         //  7 - 15
        { 6, { 2,                              8, 12}},         //  7 - 16
        { 8, { 2,  3,                          9, 13}},         //  7 - 17
        {10, { 2,  3,  4,                     10, 14}},         //  7 - 18
        { 3, {                                    11, 15}},     //  7 - 19
        { 7, { 2,                              8, 12, 16}},     //  7 - 20
        { 9, { 2,  3,                          9, 13, 17}},     //  7 - 21
        {11, { 2,  3,  4,                     10, 14, 18}}      //  7 - 22
#endif                                        
    },                                        
    {                                         
        { 5, { 1,  2} },                                        //  0 -  8
        { 4, { 2} },                                            //  1 -  8
        { 2, {} },                                              //  2 -  8
        { 2, {} },                                              //  3 -  8
        { 4, { 3} },                                            //  4 -  8
        { 6, { 3,  4} },                                        //  5 -  8
        { 7, { 3,  4,  5} },                                    //  6 -  8
        { 4, { 2} },                                            //  7 -  8
        { 0, {} },                                              //  8 -  8
        { 4, { 3}},                                             //  8 -  9
        { 6, { 3,  4}},                                         //  8 - 10
        { 5, { 2,                              7} },            //  8 - 11
        { 1, {}},                                               //  8 - 12
        { 5, { 3,                              9}},             //  8 - 13
        { 7, { 3,  4,                         10}}              //  8 - 14
#if !defined(PART_1)                          
        ,                                     
        { 6, { 2,                              7, 11}},         //  8 - 15
        { 2, {                                    12}},         //  8 - 16
        { 6, { 3,                              9, 13}},         //  8 - 17
        { 8, { 3,  4,                         10, 14}},         //  8 - 18
        { 7, { 2,                              7, 11, 15}},     //  8 - 19
        { 3, {                                    12, 16}},     //  8 - 20
        { 7, { 3,                              9, 13, 17}},     //  8 - 21
        { 9, { 3,  4,                         10, 14, 18}}      //  8 - 22
#endif                                        
    },                                        
    {                                         
        { 7, { 1,  2,  3} },                                    //  0 -  9
        { 6, { 2,  3} },                                        //  1 -  9
        { 4, { 3} },                                            //  2 -  9
        { 2, {} },                                              //  3 -  9
        { 2, {} },                                              //  4 -  9
        { 4, { 4} },                                            //  5 -  9
        { 5, { 4,  5} },                                        //  6 -  9
        { 6, { 2,  3} },                                        //  7 -  9
        { 4, { 3} },                                            //  8 -  9
        { 0, {} },                                              //  9 -  9
        { 4, { 4}},                                             //  9 - 10
        { 7, { 2,  3,                          7} },            //  9 - 11
        { 5, { 3,                              8} },            //  9 - 12
        { 1, {} },                                              //  9 - 13
        { 5, { 4,                             10}}              //  9 - 14
#if !defined(PART_1)                          
        ,                                     
        { 8, { 2,  3,                          7, 11}},         //  9 - 15
        { 6, { 3,                              8, 12}},         //  9 - 16
        { 2, {                                    13}},         //  9 - 17
        { 6, { 4,                             10, 14}},         //  9 - 18
        { 9, { 2,  3,                          7, 11, 15}},     //  9 - 19
        { 7, { 3,                              8, 12, 16}},     //  9 - 20
        { 3, {                                    13, 17}},     //  9 - 21
        { 7, { 4,                             10, 14, 18}}      //  9 - 22  
#endif                                        
    },                                        
    {                                         
        { 9, { 1,  2,  3,  4} },                                //  0 - 10
        { 8, { 2,  3,  4} },                                    //  1 - 10
        { 6, { 3,  4} },                                        //  2 - 10
        { 4, { 4} },                                            //  3 - 10
        { 2, {} },                                              //  4 - 10
        { 2, {} },                                              //  5 - 10
        { 3, { 5} },                                            //  6 - 10
        { 8, { 2,  3,  4} },                                    //  7 - 10
        { 6, { 3,  4} },                                        //  8 - 10
        { 4, { 4} },                                            //  9 - 10
        { 0, {} },                                              // 10 - 10
        { 9, { 2,  3,  4,                      7} },            // 10 - 11
        { 7, { 3,  4,                          8} },            // 10 - 12
        { 5, { 4,                              9} },            // 10 - 13
        { 1, {} }                                               // 10 - 14
#if !defined(PART_1)                          
        ,                                     
        {10, { 2,  3,  4,                      7, 11}},         // 10 - 15
        { 8, { 3,  4,                          8, 12}},         // 10 - 16
        { 6, { 4,                              9, 13}},         // 10 - 17
        { 2, {                                    14}},         // 10 - 18
        {11, { 2,  3,  4,                      7, 11, 15}},     // 10 - 19
        { 9, { 3,  4,                          8, 12, 16}},     // 10 - 20
        { 7, { 4,                              9, 13, 17}},     // 10 - 21
        { 3, {                                14, 18}}          // 10 - 22
#endif                                    
    },                                    
    {                                     
        { 4, { 1,                          7} },                //  0 - 11
        { 3, {                             7} },                //  1 - 11
        { 3, {                             7} },                //  2 - 11
        { 5, { 2,                          7} },                //  3 - 11
        { 7, { 2,  3,                      7} },                //  4 - 11
        { 9, { 2,  3,  4,                  7} },                //  5 - 11
        {10, { 2,  3,  4,  5,              7} },                //  6 - 11
        { 1, {} },                                              //  7 - 11
        { 5, { 2,                          7}},                 //  8 - 11
        { 7, { 2,  3,                      7}},                 //  9 - 11
        { 9, { 2,  3,  4,                  7}},                 // 10 - 11
        { 0, {} },                                              // 11 - 11
        { 6, { 2,                          7,  8}},             // 11 - 12
        { 8, { 2,  3,                      7,  9}},             // 11 - 13
        {10, { 2,  3,  4,                  7, 10}}              // 11 - 14
#if !defined(PART_1)                      
        ,                                 
        { 1, {}},                                               // 11 - 15
        { 7, { 2,                          7,  8}},             // 11 - 16
        { 9, { 2,  3,                      7,  9}},             // 11 - 17
        {11, { 2,  3,  4,                  7, 10}},             // 11 - 18
        { 2, {                                        15}},     // 11 - 19
        { 8, { 2,                          7,  8, 12, 16}},     // 11 - 20
        {10, { 2,  3,                      7,  9, 13, 17}},     // 11 - 21
        {12, { 2,  3,  4,                  7, 10, 14, 18}}      // 11 - 22
#endif                                    
    },                                    
    {                                     
        { 6, { 1,  2,                      8} },                //  0 - 12
        { 5, { 2,                          8} },                //  1 - 12
        { 3, {                             8} },                //  2 - 12
        { 3, {                             8} },                //  3 - 12
        { 5, { 3,                          8} },                //  4 - 12
        { 7, { 3,  4,                      8} },                //  5 - 12
        { 8, { 3,  4,  5,                  8} },                //  6 - 12
        { 5, { 2,                          8} },                //  7 - 12
        { 1, {} },                                              //  8 - 12
        { 5, { 3,                          8}},                 //  9 - 12
        { 7, { 3,  4,                      8}},                 // 10 - 12
        { 6, { 2,                          8,  7} },            // 11 - 12
        { 0, {} },                                              // 12 - 12
        { 6, { 3,                          8,  9}},             // 12 - 13
        { 8, { 3,  4,                      8, 10}}              // 12 - 14
#if !defined(PART_1)                      
        ,                                 
        { 7, { 2,                          8,  7, 11}},         // 12 - 15
        { 1, {}},                                               // 12 - 16
        { 7, { 3,                          8,  9, 13}},         // 12 - 17
        { 9, { 3, 4,                       8, 10, 14}},         // 12 - 18
        { 8, { 2,                          8,  7, 11, 15}},     // 12 - 19
        { 2, {                                        16}},     // 12 - 20
        { 8, { 3,                          8,  9, 13, 17}},     // 12 - 21
        {10, { 3, 4,                       8, 10, 14, 18}}      // 12 - 22
#endif                                    
    },                                    
    {                                     
        { 8, { 1,  2,  3,                  9} },                //  0 - 13
        { 7, { 2,  3,                      9} },                //  1 - 13
        { 5, { 3,                          9} },                //  2 - 13
        { 3, {                             9} },                //  3 - 13
        { 3, {                             9} },                //  4 - 13
        { 5, { 4,                          9} },                //  5 - 13
        { 6, { 4,  5,                      9} },                //  6 - 13
        { 7, { 2,  3,                      9} },                //  7 - 13
        { 5, { 3,                          9} },                //  8 - 13
        { 1, {} },                                              //  9 - 13
        { 5, { 4,                          9}},                 // 10 - 13
        { 8, { 2,  3,                      9,  7} },            // 11 - 13
        { 6, { 3,                          9,  8} },            // 12 - 13
        { 0, {} },                                              // 13 - 13
        { 6, { 4,                          9, 10}}              // 13 - 14
#if !defined(PART_1)                      
        ,                                 
        { 9, { 2,  3,                      9,  7, 11}},         // 13 - 15
        { 7, { 3,                          9,  8, 12}},         // 13 - 16
        { 1, {}},                                               // 13 - 17
        { 7, { 4,                          9, 10, 14}},         // 13 - 18
        {10, { 2,  3,                      9,  7, 11, 15}},     // 13 - 19
        { 8, { 3,                          9,  8, 12, 16}},     // 13 - 20
        { 2, {                                        17}},     // 13 - 21
        { 8, { 4,                          9, 10, 14, 18}}      // 13 - 22
#endif                                    
    },                                    
    {                                     
        {10, { 1,  2,  3,  4,             10} },                //  0 - 14
        { 9, { 2,  3,  4,                 10} },                //  1 - 14
        { 7, { 3,  4,                     10} },                //  2 - 14
        { 5, { 4,                         10} },                //  3 - 14
        { 3, {                            10} },                //  4 - 14
        { 3, {                            10} },                //  5 - 14
        { 4, { 5,                         10} },                //  6 - 14
        { 9, { 2,  3,  4,                 10} },                //  7 - 14
        { 7, { 3,  4,                     10} },                //  8 - 14
        { 5, { 4,                         10} },                //  9 - 14
        { 1, {} },                                              // 10 - 14
        {10, { 2,  3,  4,                 10,  7} },            // 11 - 14
        { 8, { 3,  4,                     10,  8} },            // 12 - 14
        { 6, { 4,                         10,  9} },            // 13 - 14
        { 0, {} }                                               // 14 - 14
#if !defined(PART_1)                      
        ,                                 
        {11, { 2,  3,  4,                 10,  7, 11}},         // 14 - 15
        { 9, { 3,  4,                     10,  8, 12}},         // 14 - 16
        { 7, { 4,                         10,  9, 13}},         // 14 - 17
        { 1, {}},                                               // 14 - 18
        {12, { 2,  3,  4,                 10,  7, 11, 15}},     // 14 - 19
        {10, { 3,  4,                     10,  8, 12, 16}},     // 14 - 20
        { 8, { 4,                         10,  9, 13, 17}},     // 14 - 21
        { 2, {                                        18}}      // 14 - 22
#endif
    }
#if !defined(PART_1)
    ,
    {
        { 5, { 1,                      7, 11}},                 //  0 - 15
        { 4, {                         7, 11}},                 //  1 - 15
        { 4, {                         7, 11}},                 //  2 - 15
        { 6, { 2,                      7, 11}},                 //  3 - 15
        { 8, { 2,  3,                  7, 11}},                 //  4 - 15
        {10, { 2,  3,  4,              7, 11}},                 //  5 - 15
        {11, { 2,  3,  4,  5,          7, 11}},                 //  6 - 15
        { 2, {                            11}},                 //  7 - 15
        { 6, { 2,                      7, 11}},                 //  8 - 15
        { 8, { 2,  3,                  7, 11}},                 //  9 - 15
        {10, { 2,  3,  4,              7, 11}},                 // 10 - 15
        { 1, {}},                                               // 11 - 15
        { 7, { 2,                      7, 11,  8}},             // 12 - 15
        { 9, { 2,  3,                  7, 11,  9}},             // 13 - 15
        {11, { 2,  3,  4,              7, 11, 10}},             // 14 - 15
        { 0, {} },                                              // 15 - 15
        { 8, { 2,                      7, 11,  8, 12}},         // 15 - 16
        {10, { 2,  3,                  7, 11,  9, 13}},         // 15 - 17
        {12, { 2,  3,  4,              7, 11, 10, 14}},         // 15 - 18
        { 1, {} },                                              // 15 - 19
        { 9, { 2,                      7, 11,  8, 12, 16}},     // 15 - 20
        {11, { 2,  3,                  7, 11,  9, 13, 17}},     // 15 - 21
        {13, { 2,  3,  4,              7, 11, 10, 14, 18}}      // 15 - 22
    },                              
    {                               
        { 7, { 1,  2,                  8, 12}},                 //  0 - 16
        { 6, { 2,                      8, 12}},                 //  1 - 16
        { 4, {                         8, 12}},                 //  2 - 16
        { 4, {                         8, 12}},                 //  3 - 16
        { 6, { 3,                      8, 12}},                 //  4 - 16
        { 8, { 3,  4,                  8, 12}},                 //  5 - 16
        { 9, { 3,  4,  5,              8, 12}},                 //  6 - 16
        { 6, { 2,                      8, 12}},                 //  7 - 16
        { 2, {                            12}},                 //  8 - 16
        { 6, { 3,                      8, 12}},                 //  9 - 16
        { 8, { 3,  4,                  8, 12}},                 // 10 - 16
        { 7, { 2,                      8, 12,  7}},             // 11 - 16
        { 1, {}},                                               // 12 - 16
        { 7, { 3,                      8, 12,  9}},             // 13 - 16
        { 9, { 3,  4,                  8, 12, 10}},             // 14 - 16
        { 8, { 2,                      8, 12,  7, 11}},         // 15 - 16
        { 0, {} },                                              // 16 - 16
        { 8, { 3,                      8, 12,  9, 13}},         // 16 - 17
        {10, { 3,  4,                  8, 12, 10, 14}},         // 16 - 18
        { 9, { 2,                      8, 12,  7, 11, 15}},     // 16 - 19
        { 1, {}},                                               // 16 - 20
        { 9, { 3,  4,                  8, 12,  9, 13, 17}},     // 16 - 21
        {11, { 2,                      8, 12, 10, 14, 18}},     // 16 - 22
    },                              
    {                               
        { 9, { 1,  2,  3,              9, 13}},                 //  0 - 17
        { 8, { 2,  3,                  9, 13}},                 //  1 - 17
        { 6, { 3,                      9, 13}},                 //  2 - 17
        { 4, {                         9, 13}},                 //  3 - 17
        { 4, {                         9, 13}},                 //  4 - 17
        { 6, { 4,                      9, 13}},                 //  5 - 17
        { 7, { 4,  5,                  9, 13}},                 //  6 - 17
        { 8, { 2,  3,                  9, 13}},                 //  7 - 17
        { 6, { 3,                      9, 13}},                 //  8 - 17
        { 2, {                            13}},                 //  9 - 17
        { 6, { 4,                      9, 13}},                 // 10 - 17
        { 9, { 2,  3,                  9, 13,  7}},             // 11 - 17
        { 7, { 3,                      9, 13,  8}},             // 12 - 17
        { 1, {}},                                               // 13 - 17
        { 7, { 4,                      9, 13, 10}},             // 14 - 17
        {10, { 2,  3,                  9, 13,  7, 11}},         // 15 - 17
        { 8, { 3,                      9, 13,  8, 12}},         // 16 - 17
        { 0, {} },                                              // 17 - 17
        { 8, { 4,                      9, 13, 10, 14}},         // 17 - 18
        {11, { 2,  3,                  9, 13,  7, 11, 15}},     // 17 - 19
        { 9, { 3,                      9, 13,  8, 12, 16}},     // 17 - 20
        { 1, {}},                                               // 17 - 21
        { 9, { 4,                      9, 13, 10, 14, 18}},     // 17 - 22
    },                              
    {                               
        {11, { 1,  2,  3,  4,         10, 14}},                 //  0 - 18
        {10, { 2,  3,  4,             10, 14}},                 //  1 - 18
        { 8, { 3,  4,                 10, 14}},                 //  2 - 18
        { 6, { 4,                     10, 14}},                 //  3 - 18
        { 4, {                        10, 14}},                 //  4 - 18
        { 4, {                        10, 14}},                 //  5 - 18
        { 5, { 5,                     10, 14}},                 //  6 - 18
        {10, { 2,  3,  4,             10, 14}},                 //  7 - 18
        { 8, { 3,  4,                 10, 14}},                 //  8 - 18
        { 6, { 4,                     10, 14}},                 //  9 - 18
        { 2, {                            14}},                 // 10 - 18
        {11, { 2,  3,  4,             10, 14,  7}},             // 11 - 18
        { 9, { 3, 4,                  10, 14,  8}},             // 12 - 18
        { 7, { 4,                     10, 14,  9}},             // 13 - 18
        { 1, {}},                                               // 14 - 18
        {12, { 2,  3,  4,             10, 14,  7, 11}},         // 15 - 18
        {10, { 3,  4,                 10, 14,  8, 12}},         // 16 - 18
        { 8, { 4,                     10, 14,  9, 13}},         // 17 - 18
        { 0, {} },                                              // 18 - 18
        {13, { 2,  3,  4,             10, 14,  7, 11, 15}},     // 18 - 19
        {11, { 3,  4,                 10, 14,  8, 12, 16}},     // 18 - 20
        { 9, { 4,                     10, 14,  9, 13, 17}},     // 18 - 21
        { 1, {} },                                              // 18 - 22
    },
    {
        { 6, { 1,                  7, 11, 15}},                 //  0 - 19
        { 5, {                     7, 11, 15}},                 //  1 - 19
        { 5, {                     7, 11, 15}},                 //  2 - 19
        { 7, { 2,                  7, 11, 15}},                 //  3 - 19
        { 9, { 2,  3,              7, 11, 15}},                 //  4 - 19
        {11, { 2,  3,  4,          7, 11, 15}},                 //  5 - 19
        {12, { 2,  3,  4,  5,      7, 11, 15}},                 //  6 - 19
        { 3, {                        11, 15}},                 //  7 - 19
        { 7, { 2,                  7, 11, 15}},                 //  8 - 19
        { 9, { 2,  3,              7, 11, 15}},                 //  9 - 19
        {11, { 2,  3,  4,          7, 11, 15}},                 // 10 - 19
        { 2, {                            15}},                 // 11 - 19
        { 8, { 2,                  7, 11, 15,  8}},             // 12 - 19
        {10, { 2,  3,              7, 11, 15,  9}},             // 13 - 19
        {12, { 2,  3,  4,          7, 11, 15, 10}},             // 14 - 19
        { 1, {} },                                              // 15 - 19
        { 9, { 2,                  7, 11, 15,  8, 12}},         // 16 - 19
        {11, { 2,  3,              7, 11, 15,  9, 13}},         // 17 - 19
        {13, { 2,  3,  4,          7, 11, 15, 10, 14}},         // 18 - 19
        { 0, {} },                                              // 19 - 19
        {10, { 2,                  7, 11, 15,  8, 12, 16}},     // 19 - 20
        {12, { 2,  3,              7, 11, 15,  9, 13, 17}},     // 19 - 21
        {14, { 2,  3,  4,          7, 11, 15, 10, 14, 18}},     // 19 - 22
    },
    {
        { 8, { 1,  2,              8, 12, 16}},                 //  0 - 20
        { 7, { 2,                  8, 12, 16}},                 //  1 - 20
        { 5, {                     8, 12, 16}},                 //  2 - 20
        { 5, {                     8, 12, 16}},                 //  3 - 20
        { 7, { 3,                  8, 12, 16}},                 //  4 - 20
        { 9, { 3,  4,              8, 12, 16}},                 //  5 - 20
        {10, { 3,  4,  5,          8, 12, 16}},                 //  6 - 20
        { 7, { 2,                  8, 12, 16}},                 //  7 - 20
        { 3, {                        12, 16}},                 //  8 - 20
        { 7, { 3,                  8, 12, 16}},                 //  9 - 20
        { 9, { 3,  4,              8, 12, 16}},                 // 10 - 20
        { 8, { 2,                  8, 12, 16,  7}},             // 11 - 20
        { 2, {                            16}},                 // 12 - 20
        { 8, { 3,                  8, 12, 16,  9}},             // 13 - 20
        {10, { 3,  4,              8, 12, 16, 10}},             // 14 - 20
        { 9, { 2,                  8, 12, 16,  7, 11}},         // 15 - 20
        { 1, {}},                                               // 16 - 20
        { 9, { 3,                  8, 12, 16,  9, 13}},         // 17 - 20
        {11, { 3,  4,              8, 12, 16, 10, 14}},         // 18 - 20
        {10, { 2,                  8, 12, 16,  7, 11, 15}},     // 19 - 20
        { 0, {} },                                              // 20 - 20
        {10, { 2,  3,              8, 12, 16,  9, 13, 17}},     // 20 - 21
        {12, { 2,  3,  4,          8, 12, 16, 10, 14, 18}},     // 20 - 22
    },
    {
        {10, { 1,  2,  3,          9, 13, 17}},                 //  0 - 21
        { 9, { 2,  3,              9, 13, 17}},                 //  1 - 21
        { 7, { 3,                  9, 13, 17}},                 //  2 - 21
        { 5, {                     9, 13, 17}},                 //  3 - 21
        { 5, {                     9, 13, 17}},                 //  4 - 21
        { 7, { 4,                  9, 13, 17}},                 //  5 - 21
        { 8, { 4,  5,              9, 13, 17}},                 //  6 - 21
        { 9, { 2,  3,              9, 13, 17}},                 //  7 - 21
        { 7, { 3,                  9, 13, 17}},                 //  8 - 21
        { 3, {                        13, 17}},                 //  9 - 21
        { 7, { 4,                  9, 13, 17}},                 // 10 - 21
        {10, { 2,  3,              9, 13, 17,  7 }},            // 11 - 21
        { 8, { 3,                  9, 13, 17,  8 }},            // 12 - 21
        { 2, {                            17}},                 // 13 - 21
        { 8, { 4,                  9, 13, 17, 10 }},            // 14 - 21
        {11, { 2,  3,              9, 13, 17,  7, 11 }},        // 15 - 21
        { 9, { 3,  4,              9, 13, 17,  8, 12 }},        // 16 - 21
        { 1, {}},                                               // 17 - 21
        { 9, { 4,                  9, 13, 17, 10, 14 }},        // 18 - 21
        {12, { 2,  3,              9, 13, 17,  7, 11, 15 }},    // 19 - 21
        {10, { 2,  3,              9, 13, 17,  8, 12, 16 }},    // 20 - 21
        { 0, {} },                                              // 21 - 21
        {10, { 4,                  9, 13, 17, 10, 14, 18 }},    // 21 - 22
    },
    {
        {12, { 1,  2,  3,  4,     10, 14, 18}},                 //  0 - 22
        {11, { 2,  3,  4,         10, 14, 18}},                 //  1 - 22
        { 9, { 3,  4,             10, 14, 18}},                 //  2 - 22
        { 7, { 4,                 10, 14, 18}},                 //  3 - 22
        { 5, {                    10, 14, 18}},                 //  4 - 22
        { 5, {                    10, 14, 18}},                 //  5 - 22
        { 6, { 5,                 10, 14, 18}},                 //  6 - 22
        {11, { 2,  3,  4,         10, 14, 18}},                 //  7 - 22
        { 9, { 3,  4,             10, 14, 18}},                 //  8 - 22
        { 7, { 4,                 10, 14, 18}},                 //  9 - 22  
        { 3, {                        14, 18}},                 // 10 - 22
        {12, { 2,  3,  4,         10, 14, 18,  7}},             // 11 - 22
        {10, { 3, 4,              10, 14, 18,  8}},             // 12 - 22
        { 8, { 4,                 10, 14, 18,  9}},             // 13 - 22
        { 2, {                            18}},                 // 14 - 22
        {13, { 2,  3,  4,         10, 14, 18,  7, 11}},         // 15 - 22
        {11, { 2,                 10, 14, 18,  8, 12}},         // 16 - 22
        { 9, { 4,                 10, 14, 18,  9, 13}},         // 17 - 22
        { 1, {} },                                              // 18 - 22
        {14, { 2,  3,  4,         10, 14, 18,  7, 11, 15}},     // 19 - 22
        {12, { 2,  3,  4,         10, 14, 18,  8, 12, 16}},     // 20 - 22
        {10, { 4,                 10, 14, 18,  9, 13, 17}},     // 21 - 22
        { 0, {} }                                               // 22 - 22
    }
#endif
};

#if defined(PART_1)
#if defined(TEST)
// #############
// #...........#
// ###B#C#B#D###
//   #A#D#C#A#
//   #########
static State constexpr START_STATE = { 0, 0, 0, 0, 0, 0, 0, 'B', 'C', 'B', 'D', 'A', 'D', 'C', 'A' };
#else
// #############
// #...........#
// ###B#B#D#D###
//   #C#A#A#C#
//   #########
static State constexpr START_STATE = { 0, 0, 0, 0, 0, 0, 0, 'B', 'B', 'D', 'D', 'C', 'A', 'A', 'C' };
#endif

// #############
// #...........#
// ###A#B#C#D###
//   #A#B#C#D#
//   #########
static State constexpr GOAL_STATE = { 0, 0, 0, 0, 0, 0, 0, 'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D' };
#else
#if defined(TEST)
// #############
// #...........#
// ###B#C#B#D###
//   #D#C#B#A#
//   #D#B#A#C#
//   #A#D#C#A#
//   #########
static State constexpr START_STATE = { 0, 0, 0, 0, 0, 0, 0, 'B', 'C', 'B', 'D', 'D', 'C', 'B', 'A', 'D', 'B', 'A', 'C', 'A', 'D', 'C', 'A'};
#else
// #############
// #...........#
// ###B#B#D#D###
//   #D#C#B#A#
//   #D#B#A#C#
//   #C#A#A#C#
//   #########
static State constexpr START_STATE = { 0, 0, 0, 0, 0, 0, 0, 'B', 'B', 'D', 'D', 'D', 'C', 'B', 'A', 'D', 'B', 'A', 'C', 'C', 'A', 'A', 'C' };
#endif

// #############
// #...........#
// ###A#B#C#D###
//   #A#B#C#D#
//   #A#B#C#D#
//   #A#B#C#D#
//   #########
static State constexpr GOAL_STATE = { 0, 0, 0, 0, 0, 0, 0, 'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D', 'A', 'B', 'C', 'D' };
#endif

static NodeMap allNodes;
static std::vector<std::shared_ptr<PathFinder::Edge>> allEdges;

int main(int argc, char** argv)
{
    std::shared_ptr<Node> start(new Node(START_STATE));
    allNodes[start->stateId()] = start;
    std::shared_ptr<Node> goal(new Node(GOAL_STATE));
    allNodes[goal->stateId()] = goal;

    PathFinder pf;

    PathFinder::Path path = pf.findPath(start.get(), goal.get());
    std::cout << "Lowest cost is " << goal->f() << std::endl;

    return 0;
}

static int64_t stateId(State const& state)
{
    int64_t id = 0;
    for (int i = 0; i < NUMBER_OF_NODES; ++i)
    {
        id *= 5;
        if (state[i] != 0)
            id += state[i] - 'A' + 1;
    }
    return id;
}

static State moveThing(State const& state, int from, int to)
{
    State moved = state;
    char thing = moved[from];
    moved[from] = 0;
    moved[to] = thing;
    return moved;
}

static bool isRoomSquatted(State const& state, char type)
{
    int r = ROOMS + (type - 'A');
#if defined(PART_1)
    return ((state[r +  0] != 0 && state[r +  0] != type) ||
            (state[r +  4] != 0 && state[r +  4] != type));
#else
    return ((state[r + 0] != 0 && state[r + 0] != type) ||
            (state[r + 4] != 0 && state[r + 4] != type) ||
            (state[r + 8] != 0 && state[r + 8] != type) ||
            (state[r + 12] != 0 && state[r + 12] != type));
#endif
}

static bool inFinalRoom(int r, char type)
{
    return ((r - (type - 'A') + 1) % 4 == 0);
}

static int firstRoomSpot(char type)
{
    return ROOMS + type - 'A';
}

static float movementCost(char type)
{
    static float constexpr costs[] = { 1.0f, 10.0f, 100.0f, 1000.0f };
    return costs[type - 'A'];
}

Node::Node(State const& state)
    : state_(state), stateId_(::stateId(state))
{
}

void Node::open(float cost, PathFinder::Node* pPredecessor, PathFinder::Node const* goal)
{
    if (edges.empty())
    {
        // Generate edges and pathfinder nodes for every possible transition from this node's state

        // For each thing in the state
        for (int f = 0; f < NUMBER_OF_NODES; ++f)
        {
            // If this spot has a thing, then generate all possible moves for it.
            char type = state_[f];
            if (type != 0)
            {
                // For each of the possible transitions
                for (int t = 0; t < NUMBER_OF_NODES; ++t)
                {
                    // Can't move to an occupied spot
                    if (state_[t] != 0)
                        continue;

                    if (t < ROOMS)
                    {
                        // If in the hallway, then can't move to somewhere else in the hallway
                        if (f < ROOMS)
                            continue;
                    }
                    else
                    {
                        // Can only move to the appropriate room and only if it is not already occupied by a thing of a different type.
                        if (!inFinalRoom(t, type))               // Not in correct room
                            continue;
                        if (isRoomSquatted(state_, type))   // But, correct room is occupied by other types 
                            continue;
                    }

                    // Check if movement is blocked
                    if (!pathIsClear(transitions[f][t]))
                        continue;

                    // Add the resulting node and an edge
                    State nextState = moveThing(state_, f, t);
                    int64_t nextId = ::stateId(nextState);
                    auto pElement = allNodes.find(nextId);
                    if (pElement == allNodes.end())
                    {
                        auto result = allNodes.insert(std::make_pair(nextId, std::make_shared<Node>(nextState)));
                        pElement = result.first;
                    }
                    float cost = float(transitions[f][t].cost) * movementCost(type);
                    Node* pNode = pElement->second.get();
                    std::shared_ptr<PathFinder::Edge> edge(new PathFinder::Edge{ cost, pNode });
                    allEdges.push_back(edge);
                    edges.push_back(edge.get());
                }
            }
        }
    }
    PathFinder::Node::open(cost, pPredecessor, goal);
}

bool Node::pathIsClear(Transition const & transition)
{
    bool clear = true;
    for (int i : transition.intermediates)
    {
        if (i != 0 && state_[i] != 0)
        {
            clear = false;
            break;
        }
    }
    return clear;
}

float Node::h(PathFinder::Node const* goal) const
{
    float cost = 0.0f;
    for (int i = 0; i < NUMBER_OF_NODES; ++i)
    {
        char type = state_[i];
        if (type != 0 && !inFinalRoom(i, type))
        {
            int end = firstRoomSpot(type);
            cost += transitions[i][end].cost * movementCost(type);
        }
    }
    return cost;
}
